import addressPickerPage from '../../support/page-object/address_picker.page.js'
/// <reference types="Cypress" />

describe("C2. Address picker (#addressPicker1) block testing", () => {
    beforeEach(() => {
      cy.visit('/');
    });
    it('1. Check block title to be visible and have valid text', () => {
        addressPickerPage.headerTitleVerifyAddressPickerZero('Address Picker')
    })
    xit('2. Check "View code" button to be visible, not disabled. Check that clicking on button shows code in tabs and hide code after one more click on it', () => {
        addressPickerPage.headerButtonVerifyAddressPickerZero(0, 'mat-focus-indicator mat-tooltip-trigger mat-icon-button mat-button-base')
    })
    xit('3. Check "Configure example" button to be visible, not disabled. Clicking on do ????', () => {
        addressPickerPage.headerButtonVerifyAddressPickerZero(1, 'mat-focus-indicator mat-tooltip-trigger mat-icon-button mat-button-base ng-star-inserted')
    })
    it('4. Check "Save" button to be visibe and disabled when input field if clear', () => {
        addressPickerPage.saveButtonVerifyAddressPickerZero(0, 'mat-focus-indicator mat-raised-button mat-button-base mat-primary mat-button-disabled', ' Save ')
    })
    it('5. Check clue element to be visible, have valid class and text', () => {
        addressPickerPage.hintTitleVerifyAddressPickerZero('mat-hint ng-tns-c145-0 ng-star-inserted', 'Hint Hint Hint Hint Hint...')
    })
    it('6. Testing of autocomplete function', () => {
        addressPickerPage.selectedAddrVerifyAddressPickerZero(0)
        addressPickerPage.inputTitleVerifyAddressPickerZero('mat-form-field-label ng-tns-c145-0 mat-empty mat-form-field-empty ng-star-inserted fs-form-label-required fs-form-label', 'Location *')
        addressPickerPage.autocompliteAdressVerifyAddressPickerZero('Toronto', ' Toronto, ON, Canada ')
        addressPickerPage.selectedAddrVerifyAddressPickerZero(1, 'Selected Address', 'Toronto', 'ON', 'CA')
        addressPickerPage.saveButtonVerifyAddressPickerZero(1, 'mat-focus-indicator mat-raised-button mat-button-base mat-primary', ' Save ')
        addressPickerPage.saveButtonAddressPickerZero.click()
        addressPickerPage.informationPopupVerifyAddressPickerPage('Saved')
        addressPickerPage.clearAddrAdressVerifyAddressPickerZero()
        addressPickerPage.selectedAddrVerifyAddressPickerZero(0)
    })
    it('7. Testing of manual address input window with autocomplite and without. Part 1', () => {
        addressPickerPage.manualInputAddrAddressPickerZero(' Enter address manually ')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(0, 'Street', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(1, 'Address 2', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(2, 'Address 3', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(3, 'City', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(4, 'Province/State', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(6, 'ZIP/Postal Code', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(5, 'Country', 0, 'Canada')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(4, 'Province', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(6, 'Postal Code', 0, 'This is test')
        addressPickerPage.mapBlockVerifyAddrAddressPickerPage(0, 'Could not find address "CA, This is test, This is test, This is test, This is test"')
        addressPickerPage.footerButtonVerifyAddrAddressPickerPage(0, 1, 'mat-focus-indicator mat-button mat-button-base mat-primary', 'Apply')
        addressPickerPage.footerButtonVerifyAddrAddressPickerPage(1, 1, 'mat-focus-indicator mat-button mat-button-base', 'Cancel')
        addressPickerPage.footerButtonVerifyAddrAddressPickerPage(2, 0, '', '')
        addressPickerPage.footerButtonsAddressPickerPage.contains('Apply').click()
        cy.wait(500)
        addressPickerPage.selectedAddrVerifyAddressPickerZero(2, 'Selected Address', 'This is test', 'This is test', 'This is test', 'This is test', 'This is test', 'This is test', 'CA')
        cy.reload()

        addressPickerPage.inputFieldAddressPickerZero.click()
        addressPickerPage.manualInputAddrAddressPickerZero(' Enter address manually ')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(3, 'City', 0, 'Toronto')
        addressPickerPage.footerButtonsAddressPickerPage.contains('Cancel').click()
        addressPickerPage.manualInputAddrAddressPickerZero(' Enter address manually ')
        cy.reload()
    })
    it('8. Testing of manual address input window with autocomplite and without. Part 2', () => {
        addressPickerPage.autocompliteAdressVerifyAddressPickerZero('Toronto', ' Toronto, ON, Canada ')
        addressPickerPage.addressPreviewAddressPickerZero.eq(0).click()
        addressPickerPage.mapBlockVerifyAddrAddressPickerPage(1)
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(0, 'Street', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(1, 'Address 2', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(2, 'Address 3', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(3, 'City', 'Toronto', 'Toronto')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(5, 'Country', 0, 'Canada')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(4, 'Province', 0, 'Ontario')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(6, 'Postal Code', 0, 'This is test')
        addressPickerPage.footerButtonVerifyAddrAddressPickerPage(0, 1, 'mat-focus-indicator mat-button mat-button-base mat-primary', 'Apply')
        addressPickerPage.footerButtonVerifyAddrAddressPickerPage(1, 1, 'mat-focus-indicator mat-button mat-button-base ng-star-inserted', ' Center Address ')
        addressPickerPage.footerButtonVerifyAddrAddressPickerPage(2, 1, 'mat-focus-indicator mat-button mat-button-base', 'Cancel')
        addressPickerPage.footerButtonVerifyAddrAddressPickerPage(3, 0, '', '')
        addressPickerPage.footerButtonsAddressPickerPage.contains('Cancel').click()
        addressPickerPage.selectedAddrVerifyAddressPickerZero(1, 'Selected Address', 'Toronto', 'ON', 'CA')
        cy.reload()

        addressPickerPage.autocompliteAdressVerifyAddressPickerZero('Toronto', ' Toronto, ON, Canada ')
        addressPickerPage.addressPreviewAddressPickerZero.eq(0).click()
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(0, 'Street', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(1, 'Address 2', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(2, 'Address 3', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(3, 'City', 'Toronto', 'Toronto')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(5, 'Country', 0, 'Canada')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(4, 'Province', 0, 'Ontario')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(6, 'Postal Code', 0, 'This is test')
        addressPickerPage.footerButtonsAddressPickerPage.contains('Apply').click()
        addressPickerPage.selectedAddrVerifyAddressPickerZero(2, 'Selected Address', 'This is test', 'This is test', 'This is test', 'Toronto', 'ON', 'This is test', 'CA')
        cy.reload()
    })
    it('9. Testing of manual address input window with autocomplite and without. Part 3', () => {
        addressPickerPage.autocompliteAdressVerifyAddressPickerZero('Toronto', ' Toronto, ON, Canada ')
        addressPickerPage.addressPreviewAddressPickerZero.eq(0).click()
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(0, 'Street', 0, 'This is test')
        addressPickerPage.escapeButtonClickModalWindowAddressPickerPage()
        addressPickerPage.leavingNotificationWindowVerifyAddressPickerPage('You Have Unsaved Changes', 'What would you like to do with your changes?')
        addressPickerPage.leavingNotificationWindowButtonVerifyAddressPickerPage(0, 'mat-focus-indicator mat-button mat-button-base mat-primary ng-star-inserted', 'Save & Continue')
        addressPickerPage.leavingNotificationWindowButtonVerifyAddressPickerPage(1, 'mat-focus-indicator mat-button mat-button-base ng-star-inserted', 'Discard Changes & Continue')
        addressPickerPage.leavingNotificationWindowButtonVerifyAddressPickerPage(2, 'mat-focus-indicator mat-button mat-button-base ng-star-inserted', 'Review Changes')

        addressPickerPage.leavingNotificationWindowButtonClickVerifyAddressPickerPage(0, 'Review Changes')
        addressPickerPage.leavingChangesNotificationWindowAddressPickerPage.should('not.exist')
        addressPickerPage.manualAddrInputWindowAddressPickerPage.should('be.visible')
        cy.reload()

        addressPickerPage.autocompliteAdressVerifyAddressPickerZero('Toronto', ' Toronto, ON, Canada ')
        addressPickerPage.addressPreviewAddressPickerZero.eq(0).click()
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(3, 'City', 'Toronto', 'Toronto')
        addressPickerPage.escapeButtonClickModalWindowAddressPickerPage()
        addressPickerPage.leavingNotificationWindowButtonClickVerifyAddressPickerPage(0, 'Discard Changes & Continue')
        addressPickerPage.selectedAddrVerifyAddressPickerZero(1, 'Selected Address', 'Toronto', 'ON', 'CA')
        cy.reload()

        addressPickerPage.autocompliteAdressVerifyAddressPickerZero('Toronto', ' Toronto, ON, Canada ')
        addressPickerPage.addressPreviewAddressPickerZero.eq(0).click()
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(0, 'Street', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(1, 'Address 2', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(2, 'Address 3', 0, 'This is test')
        addressPickerPage.manualAddrWindowInputAndTitleAddressPickerPage(6, 'Postal Code', 0, 'This is test')
        addressPickerPage.escapeButtonClickModalWindowAddressPickerPage()
        addressPickerPage.leavingNotificationWindowButtonClickVerifyAddressPickerPage(0, 'Save & Continue')
        addressPickerPage.selectedAddrVerifyAddressPickerZero(2, 'Selected Address', 'This is test', 'This is test', 'This is test', 'Toronto', 'ON', 'This is test', 'CA')
    })
})